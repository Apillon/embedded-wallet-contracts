/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestP256R1,
  TestP256R1Interface,
} from "../../../contracts/test/TestP256R1";

const _abi = [
  {
    inputs: [],
    name: "DER_Split_Error",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y2",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "uint256",
        name: "x3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y3",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "double",
    outputs: [
      {
        internalType: "uint256",
        name: "x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y2",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "secret",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    name: "ecdsa_sign_raw",
    outputs: [
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "secret",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    name: "ecdsa_sign_raw_precompile",
    outputs: [
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "pubkey",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
    ],
    name: "ecdsa_test_encode",
    outputs: [
      {
        internalType: "bytes",
        name: "pkb",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Point256",
        name: "pubkey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
    ],
    name: "ecdsa_verify_raw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "pubkey",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
    ],
    name: "ecdsa_verify_raw_precompile",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "pkb",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "z",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "ecdsa_verify_raw_precompile_raw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "isOnCurve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
    ],
    name: "multiply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611f18908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c9081630b0dbcfa146100ba57508063154b72bf146100b55780631b1baf1c146100b057806355dcf504146100ab5780635975c35a146100a657806382f46c0a146100a1578063b3a9b5f61461009c578063d89adb1d14610097578063e022d77c146100925763f37e21651461008d57600080fd5b610967565b61093f565b610671565b610634565b6105dc565b610502565b610424565b61032f565b61025f565b3461015c57604036600319011261015c57630586de7d60e11b608090815260043560845260243560a45260209060448173__$48c1d2fad93a6f4bc06b9bb3a587c0c12c$__5af4908115610150579061011f575b6040519015158152602090f35b0390f35b5060203d8111610149575b6101428161013a61011b93610175565b608001611d1a565b905061010e565b503d61012a565b604051903d90823e3d90fd5b80fd5b634e487b7160e01b600052604160045260246000fd5b601f80199101166080016080811067ffffffffffffffff82111761019857604052565b61015f565b6040810190811067ffffffffffffffff82111761019857604052565b6060810190811067ffffffffffffffff82111761019857604052565b90601f8019910116810190811067ffffffffffffffff82111761019857604052565b67ffffffffffffffff811161019857601f01601f191660200190565b81601f8201121561025a5780359061022a826101f7565b9261023860405194856101d5565b8284526020838301011161025a57816000926020809301838601378301015290565b600080fd5b3461025a57606036600319011261025a5767ffffffffffffffff60043581811161025a57610291903690600401610213565b9060443590811161025a5760008061011b936102b461031d943690600401610213565b6102f16040516024356020820152602081526102cf8161019d565b6102e3604051938492602084019687611c8e565b03601f1981018352826101d5565b51906007600160981b015afa61030e610308611913565b91611cdd565b60208082518301019101611d35565b60405190151581529081906020820190565b3461025a5760408060031936011261025a5760043590602435600091825b60015b15610388575b600093825161037f816102e36020820194888b8791606093918352602083015260408201520190565b51902093610350565b8315801561040c575b61035657939091926103a2816114ed565b5093600080516020611ec3833981519152809506948515610400576103c6836111fc565b966103fb576000968180868909840890099586156103ef57845186815260208101889052604090f35b9194509291945061034d565b6109b6565b5092919490935061034d565b50600080516020611ec3833981519152841015610391565b3461025a5760408060031936011261025a5761043e6118e3565b50805161011b6104e660008085602095600435878201528681526104618161019d565b6104c48783516024358282015281815261047a8161019d565b856104ae61049b87519660808689019960078b5289015260a08801906105b7565b601f1993848883030160608901526105b7565b85810392830160808701525280845201826101d5565b51906006600160981b015afa6104e16104db611913565b91611943565b611a8c565b8051920151925191825260208201929092529081906040820190565b3461025a57366003190160a0811261025a5760401361025a57602061054960405161052c8161019d565b600435815260243583820152608435906064359060443590611749565b6040519015158152f35b806023121561025a57604051906105698261019d565b81604491821161025a576004905b8282106105845750505090565b8135815260209182019101610577565b60005b8381106105a75750506000910152565b8181015183820152602001610597565b906020916105d081518092818552858086019101610594565b601f01601f1916010190565b3461025a57608036600319011261025a576106266106016105fc36610553565b611e64565b61011b610612606435604435611d7f565b6040519384936040855260408501906105b7565b9083820360208501526105b7565b3461025a57606036600319011261025a5761065f6106596044356024356004356116a9565b9161114e565b60408051928352602083019190915290f35b3461025a57604036600319011261025a5761065f600160601b63ffffffff60c01b0319600160043509600160601b63ffffffff60c01b031960016024350990600160601b63ffffffff60c01b0319806024358009600160601b63ffffffff60c01b031984800809600160601b63ffffffff60c01b0319908008600160601b63ffffffff60c01b031990800891600160601b63ffffffff60c01b031980808080868008600080516020611ea383398151915209600160601b63ffffffff60c01b0319806003816004358009086003600160601b0363ffffffff60c01b03190908600160601b63ffffffff60c01b03196003600160601b0363ffffffff60c01b031981806004358009600160601b63ffffffff60c01b0319806004358009600160601b63ffffffff60c01b0319600435800908080809600160601b63ffffffff60c01b03198080600080516020611ea383398151915281808980086003600160601b0363ffffffff60c01b03190908600160601b63ffffffff60c01b0319602435800908600160601b63ffffffff60c01b031980600080516020611ea383398151915281808a80086003600160601b0363ffffffff60c01b03190908600160601b63ffffffff60c01b031990810390602435800908090891600160601b63ffffffff60c01b0319918290818080858008600080516020611ea383398151915209600160601b63ffffffff60c01b0319806003816004358009086003600160601b0363ffffffff60c01b0319090890600160601b63ffffffff60c01b031990800809600160601b63ffffffff60c01b03199081039181908190600080516020611ea3833981519152908290819080086003600160601b0363ffffffff60c01b03190908600160601b63ffffffff60c01b031990810390602435800908600160601b63ffffffff60c01b03198060243560043509600160601b63ffffffff60c01b03196024356004350908090861114e565b3461025a57608036600319011261025a5761065f6106596064356044356024356004356109cc565b3461025a5760a036600319011261025a5761011b61031d60008061098d6105fc36610553565b61099b608435606435611d7f565b6102f16040516044356020820152602081526102cf8161019d565b634e487b7160e01b600052601260045260246000fd5b9290939193831580610c99575b610c9157841580610c89575b610c7f57600160601b63ffffffff60c01b03198060018188880908600160601b63ffffffff60c01b0319908103908060018908600160601b63ffffffff60c01b031960018908090890600160601b63ffffffff60c01b03198060018186850908600160601b63ffffffff60c01b0319908103908060018708600160601b63ffffffff60c01b03196001860809086003600160601b0363ffffffff60c01b031995909190600080516020611ea383398151915290600160601b63ffffffff60c01b031980868a09830897600160601b63ffffffff60c01b0319898103818987090898600160601b63ffffffff60c01b031990818987090895600160601b63ffffffff60c01b031982818d8181880990600160601b63ffffffff60c01b03199081818a0990600160601b63ffffffff60c01b0319908a0908080893600163ffffffff60601b0360601b1992600163ffffffff60601b0360601b19908d6003600163ffffffff60601b0360601b1991600163ffffffff60601b0360601b1990890908900991600160601b63ffffffff60c01b0319910908600160601b63ffffffff60c01b031980828509600160601b63ffffffff60c01b0319888c090898600160601b63ffffffff60c01b03199182908709600160601b63ffffffff60c01b031990810391818d81808d8b09600160601b63ffffffff60c01b0319838a0908600160601b63ffffffff60c01b03199081039181908e9008600160601b63ffffffff60c01b03198b8a080908090898600160601b63ffffffff60c01b031996879485938480848409600160601b63ffffffff60c01b031986840908600160601b63ffffffff60c01b031990810394909384910891600160601b63ffffffff60c01b0319910809080991600160601b63ffffffff60c01b031991090890565b9293506001919050565b5081156109e5565b509150600190565b5080156109d9565b949190959395851580611146575b61113d57831580611135575b61112c57600160601b63ffffffff60c01b03198080808080888809600160601b63ffffffff60c01b03198a8d0908600160601b63ffffffff60c01b03199081039080898b08600160601b63ffffffff60c01b0319898e0809086003600160601b0363ffffffff60c01b031909600160601b63ffffffff60c01b031980878709600080516020611ea38339815191520908600160601b63ffffffff60c01b03198984090890600160601b63ffffffff60c01b0319808585096003600160601b0363ffffffff60c01b03190997600160601b63ffffffff60c01b0319898180898c09600160601b63ffffffff60c01b0319808b8e09600160601b63ffffffff60c01b03198c8f0908080898600160601b63ffffffff60c01b031990819081908103818a8d09086003600160601b0363ffffffff60c01b031909600160601b63ffffffff60c01b03198080808a8a09600160601b63ffffffff60c01b03198c8f0908600160601b63ffffffff60c01b0319908103908d818c8e0890600160601b63ffffffff60c01b0319908c90080908600080516020611ea3833981519152090897600160601b63ffffffff60c01b0319808a8c09600160601b63ffffffff60c01b031986818080808e8e8e8380838309600160601b63ffffffff60c01b0319858f0908600160601b63ffffffff60c01b031990810393909283910890600160601b63ffffffff60c01b0319908d0809086003600160601b0363ffffffff60c01b031909600160601b63ffffffff60c01b0319808e8e09600080516020611ea38339815191520908600160601b63ffffffff60c01b031990810390888a0908090898600160601b63ffffffff60c01b03199081908180808b8b09600160601b63ffffffff60c01b0319888a0908600160601b63ffffffff60c01b031990810390808c8908600160601b63ffffffff60c01b03198c8b08090809600160601b63ffffffff60c01b031990810390808080808d8d8d8380838309600160601b63ffffffff60c01b0319858e0908600160601b63ffffffff60c01b031990810393909283910890600160601b63ffffffff60c01b0319908c0809086003600160601b0363ffffffff60c01b031909600160601b63ffffffff60c01b0319808d8d09600080516020611ea38339815191520908600160601b63ffffffff60c01b03199081039087890908600160601b63ffffffff60c01b03198080888a09600160601b63ffffffff60c01b03198e890908600160601b63ffffffff60c01b03199081039080898f08600160601b63ffffffff60c01b03198b8a080908090899600160601b63ffffffff60c01b031997889283918280878909600160601b63ffffffff60c01b031983850908600160601b63ffffffff60c01b0319908103929091829088900890600160601b63ffffffff60c01b03199089900809080994600160601b63ffffffff60c01b03199485938480848409600160601b63ffffffff60c01b031986840908600160601b63ffffffff60c01b031990810394909384910891600160601b63ffffffff60c01b031991080908090890565b94955092915050565b508615610cbb565b50509250929190565b508015610caf565b9291909260405190602092838352838084015283604084015260608301527fffffffff00000001000000000000000000000000fffffffffffffffffffffffd6080830152600163ffffffff60601b0360601b19928360a0840152808360c08160055afa925192156111c3575081839109930990565b6064906040519062461bcd60e51b8252600482015260126024820152715345435032353652312e696e76657273652160701b6044820152fd5b9060405191602090818452818085015281604085015260608401527fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63254f6080840152600080516020611ec383398151915260a0840152808360c08160055afa925192156111c35750565b919290600160601b63ffffffff60c01b0319848409600080516020611ea3833981519152906003600160601b0363ffffffff60c01b031990600160601b63ffffffff60c01b0319808080808580088709600160601b63ffffffff60c01b03198080808e80098909600160601b63ffffffff60c01b0319908103908d800908870908600160601b63ffffffff60c01b031980808c80098709600160601b63ffffffff60c01b0319808c8009600160601b63ffffffff60c01b03198d8181800990600160601b63ffffffff60c01b031990800908080809600160601b63ffffffff60c01b0319808080808d80098909600160601b63ffffffff60c01b031980888008890908600160601b63ffffffff60c01b031989800908600160601b63ffffffff60c01b03198080808e80098a09600160601b63ffffffff60c01b0319808980088a0908600160601b63ffffffff60c01b0319908103908a800908090895600160601b63ffffffff60c01b0319888609600160601b63ffffffff60c01b031990800897600160601b63ffffffff60c01b031994858080808780088409600160601b63ffffffff60c01b03198080808880098b09600160601b63ffffffff60c01b031990810390898009088909088b09600160601b63ffffffff60c01b031990810395909485938493849182908009900991600160601b63ffffffff60c01b03199182908008900908600160601b63ffffffff60c01b0319908103908780090890600160601b63ffffffff60c01b0319908187820990600160601b63ffffffff60c01b03199088900908090893600160601b63ffffffff60c01b031991829080099009600160601b63ffffffff60c01b0319908008600160601b63ffffffff60c01b031990800890565b6106596114f9916115da565b9091565b600080516020611ec3833981519152900680156115ce5760018082167f6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296818102947f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f592830294909290841c9160009185915b60ff841061157e575050505050565b91611590916001939998959799611265565b929091946115a28a828b87878b610ca1565b9b9192909b90848b169b8c8603948d02908502019c8c02908402019a0291020196811c9301929361156f565b50600090600090600190565b600080516020611ec3833981519152900680156115ce5760018082167f6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296818102947f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f592830294909290841c9160009185915b60ff841061165b575050505050565b9161166d916001939998959799611265565b9290919461167f8a828b87878b610ca1565b909b9192848b169b8c8603948d02908502019c8c02908402019a0291020196811c9301929361164c565b91600080516020611ec3833981519152909391930690811561173c578284906001948585168091029602948094811c926000925b60ff84106116ec575050505050565b916116fe916001939998959799611265565b929091946117108a828b87878b610ca1565b9b9192909b90848b169b8c8603948d02908502019c8c02908402019a0291020196811c930192936116dd565b6000935083925060019150565b9091928151611765611761602085019283519061182e565b1590565b6117f457841580611816575b6117f4578115806117fe575b6117f4576117c5936117cf93611795610659946111fc565b9586936117b4600080516020611ec383398151915280998196096114fd565b969195909451918b099151906116a9565b9491929093610ca1565b81159081156117eb575b506117e357061490565b505050600090565b905015386117d9565b5050505050600090565b50600080516020611ec383398151915282101561177d565b50600080516020611ec3833981519152851015611771565b801580156118cb575b80156118c3575b80156118ab575b6118a457600160601b63ffffffff60c01b03199081907f5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b90829081806003600160601b0363ffffffff60c01b0319830991818180090908089180091490565b5050600090565b50600160601b63ffffffff60c01b0319821015611845565b50811561183e565b50600160601b63ffffffff60c01b0319811015611837565b604051906060820182811067ffffffffffffffff8211176101985760405260006040838281528260208201520152565b3d1561193e573d90611924826101f7565b9161193260405193846101d5565b82523d6000602084013e565b606090565b1561194a57565b60405162461bcd60e51b815260206004820152600c60248201526b1cda59db8e8819985a5b195960a21b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b8051156119a15760200190565b61197e565b8051600210156119a15760220190565b8051600110156119a15760210190565b8051600310156119a15760230190565b8051600410156119a15760240190565b9081518110156119a1570160200190565b634e487b7160e01b600052601160045260246000fd5b6004019081600411611a1b57565b6119f7565b9060018201809211611a1b57565b9060048201809211611a1b57565b9060028201809211611a1b57565b91908201809211611a1b57565b600019810191908211611a1b57565b6020039060208211611a1b57565b600381901b91906001600160fd1b03811603611a1b57565b90611a956118e3565b916008815110611c47576001600160f81b0319600360fc1b81611ac8611aba85611994565b516001600160f81b03191690565b1603611c4757600160f91b8082611ae1611aba866119a6565b1603611c4757611b05611aff611af9611aba866119b6565b60f81c90565b60ff1690565b91611b18611aff611af9611aba876119c6565b9260218411611c4757611b2a84611a0d565b90611b46611aff611af9611aba611b4086611a20565b8a6119e6565b9360218511611c4757611b6c611b5f611aba858a6119e6565b6001600160f81b03191690565b03611c475780611b84611b7f8688611a4a565b611a2e565b03611c4757611b94865191611a3c565b03611c4757611ba290611a3c565b9060049060218514611c59575b60218414611c14575b50906020809286010151940101519160208110611bfd575b5060208110611be5575b509083526020830152565b611bf1611bf691611a66565b611a74565b1c38611bda565b611bf1611c0c91949294611a66565b1c9138611bd0565b611c24611aba84889694966119e6565b16611c47576020611c3e611c388294611a20565b92611a57565b93919250611bb8565b6040516386cd05c560e01b8152600490fd5b939084611c68611aba886119d6565b16611c7f5750611c79600591611a57565b93611baf565b6040516386cd05c560e01b8152fd5b611cbe611cda9493611cb06020946007855260a08686015260a08501906105b7565b9083820360408501526105b7565b90608083828403806060850152600085520191015201906105b7565b90565b15611ce457565b60405162461bcd60e51b815260206004820152600e60248201526d1d995c9a599e4e8819985a5b195960921b6044820152606490fd5b602090607f19011261025a57608051801515810361025a5790565b9081602091031261025a5751801515810361025a5790565b60029291600360fc1b825260ff60f81b9060f81b166001820152611d7a8251809360208685019101610594565b010190565b6024611d96611d90611e0693611e26565b93611e26565b92805193805191604051958693600160f91b9283602087015260ff60f81b809360f81b166021870152611dd381518092602060228a019101610594565b850192602284015260f81b166023820152611df78251809360208785019101610594565b010360048101845201826101d5565b611cda611e14825160ff1690565b6102e360405193849260208401611d4d565b600160ff1b8116611e475760405190602082015260208152611cda8161019d565b6040519060006020830152602182015260218152611cda816101b9565b6020810151600116611e9a576002905b516040519160ff60f81b9060f81b166020830152602182015260218152611cda816101b9565b600390611e7456fe1052a18afeafbbb61bc3380063c994352f57141164fb12e2b36ab4ba777720e2ffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551a2646970667358221220301269ab501835bec8c83ace6a41226f25ea4834b00247b6fd3b99cb5d41ebe264736f6c63430008150033";

type TestP256R1ConstructorParams =
  | [linkLibraryAddresses: TestP256R1LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestP256R1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TestP256R1__factory extends ContractFactory {
  constructor(...args: TestP256R1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        TestP256R1__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: TestP256R1LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$48c1d2fad93a6f4bc06b9bb3a587c0c12c\\$__", "g"),
      linkLibraryAddresses["contracts/lib/SECP256R1.sol:SECP256R1"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestP256R1 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestP256R1__factory {
    return super.connect(runner) as TestP256R1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestP256R1Interface {
    return new Interface(_abi) as TestP256R1Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestP256R1 {
    return new Contract(address, _abi, runner) as unknown as TestP256R1;
  }
}

export interface TestP256R1LibraryAddresses {
  ["contracts/lib/SECP256R1.sol:SECP256R1"]: string;
}
