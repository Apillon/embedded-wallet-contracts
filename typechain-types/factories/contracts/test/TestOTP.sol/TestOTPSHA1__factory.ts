/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TestOTPSHA1,
  TestOTPSHA1Interface,
} from "../../../../contracts/test/TestOTP.sol/TestOTPSHA1";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "HMAC",
    outputs: [
      {
        internalType: "bytes20",
        name: "",
        type: "bytes20",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "K",
        type: "bytes",
      },
      {
        internalType: "uint64",
        name: "C",
        type: "uint64",
      },
    ],
    name: "HOTP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "time_step",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "when",
        type: "uint32",
      },
    ],
    name: "TOTP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576104bc908161001c8239f35b600080fdfe6040608081526004908136101561001557600080fd5b6000803560e01c806343501d60146101b15780636cd87a9c146100ca5763e5373c951461004157600080fd5b346100c35760603660031901126100c357823567ffffffffffffffff81116100c6576100709036908501610233565b9060243563ffffffff918282168092036100c357604435908382168092036100c35782156100b0576020866100a985850487168861031c565b9051908152f35b634e487b7160e01b815260128752602490fd5b80fd5b5080fd5b509190346101ad57806003193601126101ad5767ffffffffffffffff82358181116101a9576100fc9036908501610233565b6024359182116101a95761011560209236908601610233565b9361013184519586938493631b361ea760e21b855284016102f4565b038173__$ba42c96900d8eed96ce1f77a0c40a3a79f$__5af491821561019f5760209392610170575b5051906bffffffffffffffffffffffff19168152f35b610191919250833d8111610198575b61018981836101fb565b81019061028f565b903861015a565b503d61017f565b81513d85823e3d90fd5b8480fd5b8280fd5b50346100c357816003193601126100c35767ffffffffffffffff9280358481116101ad576101e191369101610233565b9060243593841684036100c357506020926100a99161031c565b90601f8019910116810190811067ffffffffffffffff82111761021d57604052565b634e487b7160e01b600052604160045260246000fd5b81601f8201121561028a5780359067ffffffffffffffff821161021d5760405192610268601f8401601f1916602001856101fb565b8284526020838301011161028a57816000926020809301838601378301015290565b600080fd5b9081602091031261028a57516bffffffffffffffffffffffff198116810361028a5790565b919082519283825260005b8481106102e0575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016102bf565b909161030b610319936040845260408401906102b4565b9160208184039101526102b4565b90565b6040805160c09390931b6001600160c01b03191660208401526008835282019067ffffffffffffffff82118383101761021d578160209181604052631b361ea760e21b82528461037381603f1993604482016102f4565b03018173__$ba42c96900d8eed96ce1f77a0c40a3a79f$__5af491821561047a57600092610446575b5050600f8160131a16601481101561041a5760ff906001810182811161043057821690601482101561041a576002810183811161043057831692601484101561041a57600382018181116104305716601481101561041a57848080620f424097637f000000941a961a60081b941a60101b921a60181b161717170690565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b61046b92506040906020903d8211610472575b61046382856101fb565b01019061028f565b388061039c565b3d9150610459565b6040513d6000823e3d90fdfea26469706673582212202444a717dd59a5d836825ece803a21d4747b0f686db5e8699fa420727fcb916964736f6c63430008150033";

type TestOTPSHA1ConstructorParams =
  | [linkLibraryAddresses: TestOTPSHA1LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestOTPSHA1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TestOTPSHA1__factory extends ContractFactory {
  constructor(...args: TestOTPSHA1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        TestOTPSHA1__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: TestOTPSHA1LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ba42c96900d8eed96ce1f77a0c40a3a79f\\$__", "g"),
      linkLibraryAddresses["contracts/lib/SHA1.sol:SHA1"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestOTPSHA1 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestOTPSHA1__factory {
    return super.connect(runner) as TestOTPSHA1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestOTPSHA1Interface {
    return new Interface(_abi) as TestOTPSHA1Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestOTPSHA1 {
    return new Contract(address, _abi, runner) as unknown as TestOTPSHA1;
  }
}

export interface TestOTPSHA1LibraryAddresses {
  ["contracts/lib/SHA1.sol:SHA1"]: string;
}
