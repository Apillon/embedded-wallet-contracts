/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestAccountTarget,
  TestAccountTargetInterface,
} from "../../../contracts/test/TestAccountTarget";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ExampleEvent",
    type: "event",
  },
  {
    inputs: [],
    name: "example",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exampleView",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100155760cd908161001b8239f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c908163447ee87e14607957506354353f2f14603457600080fd5b3460765780600319360112607657604080513381523060208201527f89a7ba390f3f5aa14e735b492833cbefeb32cd82f9adef04f543cf61386128819190a180f35b80fd5b82346076578060031936011260765750338152306020820152604090f3fea26469706673582212206fa7152a067e0c7d72892b2320deb63024dcbe9f7249799a8960dbd5cc71b7cc64736f6c63430008150033";

type TestAccountTargetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestAccountTargetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestAccountTarget__factory extends ContractFactory {
  constructor(...args: TestAccountTargetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestAccountTarget & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestAccountTarget__factory {
    return super.connect(runner) as TestAccountTarget__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestAccountTargetInterface {
    return new Interface(_abi) as TestAccountTargetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestAccountTarget {
    return new Contract(address, _abi, runner) as unknown as TestAccountTarget;
  }
}
