/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestMakeJSON,
  TestMakeJSONInterface,
} from "../../../contracts/test/TestMakeJSON";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum MakeJSON.ValueType",
            name: "t",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "k",
            type: "string",
          },
          {
            internalType: "string",
            name: "v",
            type: "string",
          },
        ],
        internalType: "struct MakeJSON.KeyValue[]",
        name: "items",
        type: "tuple[]",
      },
    ],
    name: "testFrom",
    outputs: [
      {
        internalType: "string",
        name: "out",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576105fc908161001c8239f35b600080fdfe608060408181526004918236101561001657600080fd5b6000803560e01c63a27a41c31461002c57600080fd5b3461018a57602091826003193601126101865784359467ffffffffffffffff808711610182573660238801121561018257868201359181831161017e5760248360051b9381858b01019436861161017a57886100899101876101e2565b8552888101928786015b8585106100d3576100c58a8a6100a98b8b61037b565b825193828593845282519281848093870152868601910161018d565b601f01601f19168101030190f35b8435828111610176578b01606090816023198236030112610172578b5191820182811085821117610160578c5284810135600281101561015c578252604481013584811161015c5761012a90863691840101610204565b8b830152606481013584811161015c579161014d8c949287869536920101610204565b8d820152815201940193610093565b8a80fd5b634e487b7160e01b8b5260418752858bfd5b8980fd5b8880fd5b8780fd5b8480fd5b8380fd5b5080fd5b80fd5b60005b8381106101a05750506000910152565b8181015183820152602001610190565b6040810190811067ffffffffffffffff8211176101cc57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176101cc57604052565b81601f8201121561025b5780359067ffffffffffffffff82116101cc5760405192610239601f8401601f1916602001856101e2565b8284526020838301011161025b57816000926020809301838601378301015290565b600080fd5b80518210156102745760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b60001981019190821161029957565b634e487b7160e01b600052601160045260246000fd5b906001820180921161029957565b604051906102ca826101b0565b60018252607d60f81b6020830152565b600211156102e457565b634e487b7160e01b600052602160045260246000fd5b9061030d6020928281519485920161018d565b0190565b6040516020810190637472756560e01b825260048152610330816101b0565b51902090565b60405162461bcd60e51b815260206004820152601b60248201527f4d616b654a534f4e2e56616c7565547970652e756e6b6e6f776e2100000000006044820152606490fd5b906103868183610260565b5191610392815161028a565b82036105ad57506103a16102bd565b905b82516103ae816102da565b6103b7816102da565b610467571561042d578161041c61042a926103fa61040f604060206104009801519501516103fa6040519889976103fa60208a0160029061161160f11b81520190565b906102fa565b62111d1160e91b815260030190565b601160f91b815260010190565b03601f1981018352826101e2565b90565b8161041c61042a926103fa61040f604060206104009801519501516103fa6040519889976103fa60208a01600290613d9160f11b81520190565b919060018251610476816102da565b61047f816102da565b0361033657604080830151928151946020948661049f87820180936102fa565b03966104b3601f19988981018352826101e2565b5190206104be610311565b149061055157610513578301519051613d9160f11b9381019384529361042a9390928592610507926103fa916104f49160020183565b66223a66616c736560c81b815260070190565b039081018352826101e2565b8301519051613d9160f11b9381019384529361042a9390928592610507926103fa9161053f9160020183565b65223a7472756560d01b815260060190565b61058157830151905161161160f11b9381019384529361042a9390928592610507926103fa916104f49160020183565b830151905161161160f11b9381019384529361042a9390928592610507926103fa9161053f9160020183565b6105c0906105ba836102af565b9061037b565b906103a356fea264697066735822122094a3e656b0394c8cab72e338b1d8dbaf915e470b33b16929102b962fd73cf87364736f6c63430008150033";

type TestMakeJSONConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestMakeJSONConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestMakeJSON__factory extends ContractFactory {
  constructor(...args: TestMakeJSONConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestMakeJSON & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestMakeJSON__factory {
    return super.connect(runner) as TestMakeJSON__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestMakeJSONInterface {
    return new Interface(_abi) as TestMakeJSONInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestMakeJSON {
    return new Contract(address, _abi, runner) as unknown as TestMakeJSON;
  }
}
