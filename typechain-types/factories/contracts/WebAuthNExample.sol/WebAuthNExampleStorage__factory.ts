/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  WebAuthNExampleStorage,
  WebAuthNExampleStorageInterface,
} from "../../../contracts/WebAuthNExample.sol/WebAuthNExampleStorage";

const _abi = [
  {
    inputs: [],
    name: "encryptionSecret",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gaspayingAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "salt",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100155760d5908161001b8239f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c908163108a5eee146078575080633c6a2f5514605c5763bfa0b13314603e57600080fd5b34605957806003193601126059576020600354604051908152f35b80fd5b5034605957806003193601126059576020600454604051908152f35b905034609b5781600319360112609b576006546001600160a01b03168152602090f35b5080fdfea264697066735822122072df1e5a065ffed30278157df83771221328b95c6e40c7686460f6d219b87b0e64736f6c63430008150033";

type WebAuthNExampleStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WebAuthNExampleStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WebAuthNExampleStorage__factory extends ContractFactory {
  constructor(...args: WebAuthNExampleStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      WebAuthNExampleStorage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): WebAuthNExampleStorage__factory {
    return super.connect(runner) as WebAuthNExampleStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WebAuthNExampleStorageInterface {
    return new Interface(_abi) as WebAuthNExampleStorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WebAuthNExampleStorage {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as WebAuthNExampleStorage;
  }
}
