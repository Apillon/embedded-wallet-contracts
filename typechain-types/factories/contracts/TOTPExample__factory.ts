/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TOTPExample,
  TOTPExampleInterface,
} from "../../contracts/TOTPExample";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "deriveSecret",
    outputs: [
      {
        internalType: "bytes20",
        name: "",
        type: "bytes20",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "generate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461017e576020818101906001600160401b03908183118484101761016857604092835260009182855283518281019083825285808201528651806060830152855b8181106101545750601f94939282610079608082858b8381999882990101528a199a8b9101168101036060810184520182610183565b51907301000000000000000000000000000000000000015afa903d1561014a573d908111610136576100b483875195601f8401160185610183565b83523d848385013e5b156100f357808251920151918181106100e2575b50509055516103a290816101a78239f35b600019910360031b1b1683806100d1565b60649084519062461bcd60e51b82526004820152601360248201527f72616e646f6d42797465733a206661696c6564000000000000000000000000006044820152fd5b634e487b7160e01b85526041600452602485fd5b50606092506100bd565b888101860151838201608001528501610043565b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176101685760405256fe6040608081526004908136101561001557600080fd5b600091823560e01c9081632a1bbc341461006e57506381c70b7a1461003957600080fd5b3461006a578160031936011261006a576020906100546102e1565b9051906bffffffffffffffffffffffff19168152f35b5080fd5b8391503461006a5760031982813601126102865761008a6102e1565b928451946020946bffffffffffffffffffffffff1980911686880152601487526100b3876102af565b8561010483519863ffffffff60c01b601e63ffffffff42160460c01b16838b015260088a526100e18a6102af565b61011585519a8b938493631b361ea760e21b8552888c860152604485019061032c565b90602499848303018a85015261032c565b038173__$ba42c96900d8eed96ce1f77a0c40a3a79f$__5af49687156102a357839761023c575b5050600f8660131a1690601482101561022a5760ff936001830185811161021857851693601485101561020857600284018681116101f75786169560148710156101e657600385018181116101d457169660148810156101c457505050868080620f4240979899637f0000009451991a961a60081b941a60101b921a60181b16171717068152f35b634e487b7160e01b825260329052fd5b5050634e487b7160e01b815260118752fd5b50634e487b7160e01b815260328752fd5b50634e487b7160e01b815260118752fd5b634e487b7160e01b815260328752fd5b50634e487b7160e01b84526011865283fd5b5050634e487b7160e01b815260328352fd5b90919650853d871161029c575b601f8101601f1916820167ffffffffffffffff81118382101761028a57879183918a52810103126102865751908116810361006a5794868061013c565b8280fd5b634e487b7160e01b8552604187528585fd5b503d610249565b505051903d90823e3d90fd5b6040810190811067ffffffffffffffff8211176102cb57604052565b634e487b7160e01b600052604160045260246000fd5b60005460405190602082019081523360601b6040830152603482526060820182811067ffffffffffffffff8211176102cb57604052905190206bffffffffffffffffffffffff191690565b919082519283825260005b848110610358575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161033756fea2646970667358221220f5d3e8fed79c529accefc0cfacdaaf4ff4cef92f1298352270438817a380f9a864736f6c63430008150033";

type TOTPExampleConstructorParams =
  | [linkLibraryAddresses: TOTPExampleLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOTPExampleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TOTPExample__factory extends ContractFactory {
  constructor(...args: TOTPExampleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        TOTPExample__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: TOTPExampleLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ba42c96900d8eed96ce1f77a0c40a3a79f\\$__", "g"),
      linkLibraryAddresses["contracts/lib/SHA1.sol:SHA1"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TOTPExample & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TOTPExample__factory {
    return super.connect(runner) as TOTPExample__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOTPExampleInterface {
    return new Interface(_abi) as TOTPExampleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TOTPExample {
    return new Contract(address, _abi, runner) as unknown as TOTPExample;
  }
}

export interface TOTPExampleLibraryAddresses {
  ["contracts/lib/SHA1.sol:SHA1"]: string;
}
