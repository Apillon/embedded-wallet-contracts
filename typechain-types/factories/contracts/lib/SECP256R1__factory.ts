/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SECP256R1,
  SECP256R1Interface,
} from "../../../contracts/lib/SECP256R1";

const _abi = [
  {
    inputs: [],
    name: "Gx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Gy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "isOnCurve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001a576101d39081610020823930815050f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c9081630b0dbcfa146100b05750806363d3e9381461007a5763b9c170801461004257600080fd5b806003193601126100775760206040517f6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2968152f35b80fd5b50806003193601126100775760206040517f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f58152f35b905060403660031901126100d5576020906100cf6024356004356100d9565b15158152f35b5080fd5b80158015610185575b801561017d575b8015610165575b61015e57600160601b63ffffffff60c01b03199081907f5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b90829081807fffffffff00000001000000000000000000000000fffffffffffffffffffffffc830991818180090908089180091490565b5050600090565b50600160601b63ffffffff60c01b03198210156100f0565b5081156100e9565b50600160601b63ffffffff60c01b03198110156100e256fea2646970667358221220e62bd8de0aa3fc74518955f97336646632c5d3590174381c77a54fa323d267ad64736f6c63430008150033";

type SECP256R1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SECP256R1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SECP256R1__factory extends ContractFactory {
  constructor(...args: SECP256R1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SECP256R1 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SECP256R1__factory {
    return super.connect(runner) as SECP256R1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SECP256R1Interface {
    return new Interface(_abi) as SECP256R1Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): SECP256R1 {
    return new Contract(address, _abi, runner) as unknown as SECP256R1;
  }
}
